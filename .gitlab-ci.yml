default:
  tags:
    - shared-fi

variables:
  PROJECT_NAME: "bip380"
  PACKAGE_REGISTRY_URL: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic

stages:
  - build_test_lint
  - release-build
  - release

build_test_lint:
  image: rust:alpine3.20
  before_script:
    - apk add --no-cache alpine-sdk
    - rustc --version
    - cargo --version
  stage: build_test_lint
  script:
    - echo "Building ${PROJECT_NAME} project..."
    - cargo build --verbose
    - echo "Testing ${PROJECT_NAME} project..."
    - cargo test
    - echo "Checking formatting via rustfmt for ${PROJECT_NAME}..."
    - rustup component add rustfmt
    - cargo fmt -- --check
    - echo "Checking for clippy warnings for ${PROJECT_NAME}..."
    - rustup component add clippy
    - cargo clippy -- -D warnings

release-build-linux:
  image: rust:alpine3.20
  before_script:
    - apk add --no-cache alpine-sdk
    - rustc --version
    - cargo --version
  stage: release-build
  script:
    - apk add --no-cache curl
    - cargo build --release
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "target/release/${PROJECT_NAME}" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/linux-x86_64/${PROJECT_NAME}"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

release-build-windows:
  stage: release-build
  image: rust:bullseye
  before_script:
    - rustc --version
    - cargo --version
    - apt-get update
    - apt-get install -y mingw-w64
    - apt-get install -y curl
    - rustup target add x86_64-pc-windows-gnu
  script:
    - cargo build --release --target x86_64-pc-windows-gnu
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "target/x86_64-pc-windows-gnu/release/${PROJECT_NAME}.exe" "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/win-x86_64/${PROJECT_NAME}.exe"
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always

release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  variables:
    LINUX_ASSET_LINK: "{\"name\":\"${PROJECT_NAME}-linux-86_64\",\"url\":\"${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/linux-x86_64/${PROJECT_NAME}\",\"type\":\"package\"}"
    WIN_ASSET_LINK: "{\"name\":\"${PROJECT_NAME}-win-86_64\",\"url\":\"${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/win-x86_64/${PROJECT_NAME}.exe\",\"type\":\"package\"}"
  script:
    - echo "Releasing..."
    - echo "Tag = ${CI_COMMIT_TAG}"
    - echo "URL = ${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}"
    - echo "LINUX = ${LINUX_ASSET_LINK}"
    - echo "WIN = ${WIN_ASSET_LINK}"
    - |
      release-cli --debug create --name "Release ${CI_COMMIT_TAG}" --tag-name "${CI_COMMIT_TAG}" --assets-link "${LINUX_ASSET_LINK}" --assets-link "${WIN_ASSET_LINK}"

    - echo "Done!"
  needs:
    - job: release-build-linux
      artifacts: true
    - job: release-build-windows
      artifacts: true
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
